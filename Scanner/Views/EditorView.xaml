<Page
    x:Class="Scanner.Views.EditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner.Views"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Behaviors"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:helpers="using:Scanner.Helpers"
    xmlns:scanner="using:Scanner"
    xmlns:converters="using:Scanner.Views.Converters"
    xmlns:v1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    Background="Transparent"
    d:DesignWidth="350"
    d:DesignHeight="600"
    NavigationCacheMode="Required"
    IsEnabled="{x:Bind ViewModel.IsLoading, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}"
    Loaded="Page_Loaded">

    <Page.DataContext>
        <viewModels:EditorViewModel x:Name="ViewModel"/>
    </Page.DataContext>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Local Styles -->
            <Style x:Name="ImageCropperThumbStyleAcrylic" TargetType="controls:ImageCropperThumb">
                <Setter Property="Background" Value="{ThemeResource SliderThumbBackgroundThemeBrush}"/>
            </Style>

            <!-- XAML Converters -->
            <converters:NotNullBoolConverter x:Key="NotNullBoolConverter"/>
            <converters:NegativeBoolConverter x:Key="NegativeBoolConverter"/>
            <converters:NegativeBoolVisibilityConverter x:Key="NegativeBoolVisibilityConverter"/>
            <converters:NotNullVisibilityConverter x:Key="NotNullVisibilityConverter"/>
            <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
            <converters:EditorModeIntConverter x:Key="EditorModeIntConverter"/>
            <converters:VisibilityOpacityConverter x:Key="VisibilityOpacityConverter"/>
            <converters:AspectRatioOptionBoolConverter x:Key="AspectRatioOptionBoolConverter"/>
            <converters:AspectRatioOptionIntConverter x:Key="AspectRatioOptionIntConverter"/>
            <converters:ListNotNullOrEmptyConverter x:Key="ListNotNullOrEmptyConverter"/>
            <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
            <converters:ToolTipConverter x:Key="ToolTipConverter"/>

            <!-- Storyboards -->
            <Storyboard x:Name="StoryboardToolbarIconDoneStart" Completed="StoryboardToolbarIconDoneStart_Completed" Duration="0:0:1.8">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="0.0" Duration="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="0.0" Duration="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.0" Duration="0:0:0.15" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1.0" Duration="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <Storyboard x:Name="StoryboardToolbarIconDoneFinish">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="1.0" Duration="0:0:0" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="1.0" Duration="0:0:0" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.0" Duration="0:0:0.15" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="0.0" Duration="0:0:0" BeginTime="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="0.0" Duration="0:0:0" BeginTime="0:0:0.15"/>
            </Storyboard>

            <!-- Flyouts -->
            <MenuFlyout x:Name="MenuFlyoutOpenWith" Placement="Bottom">
                <MenuFlyoutItem x:Name="MenuFlyoutItemStore" x:Uid="ButtonOpenWithStore" Command="{x:Bind ViewModel.OpenWithCommand}" CommandParameter="-2">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE719;" FontSize="16"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem x:Name="MenuFlyoutItemAllApps" x:Uid="ButtonOpenWithAllApps" FontWeight="SemiBold" Command="{x:Bind ViewModel.OpenWithCommand}" CommandParameter="-1"/>
            </MenuFlyout>

            <Flyout x:Name="FlyoutOpenWithWarning">
                <Grid MinWidth="250" MaxWidth="250">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" x:Uid="HeadingOpenWithWarning" Style="{StaticResource BaseTextBlockStyle}" AutomationProperties.HeadingLevel="Level1"/>
                    <TextBlock Grid.Row="1" Grid.ColumnSpan="2" x:Uid="TextOpenWithWarning" Style="{StaticResource BodyTextBlockStyle}"/>
                    <CheckBox Grid.Row="2" Grid.ColumnSpan="2" Margin="0,16,0,16" IsChecked="{x:Bind ViewModel.ShowOpenWithWarning, Mode=TwoWay, Converter={StaticResource NegativeBoolConverter}}">
                        <TextBlock x:Uid="OptionDontShowAgain" TextWrapping="WrapWholeWords"/>
                    </CheckBox>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Grid.ColumnSpan="2" x:Uid="ButtonOpenWithWarningConfirm" HorizontalAlignment="Stretch" Style="{StaticResource AccentButtonStyle}" Click="ButtonOpenWithWarningConfirm_Click"/>
                    </Grid>
                </Grid>
            </Flyout>
        </ResourceDictionary>
    </Page.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  PAGE CONTENT  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <Grid AutomationProperties.LandmarkType="Main" AutomationProperties.Name="{x:Bind HeadingEditor.Text}">
        <!-- VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="NormalState" >
                    <Storyboard>

                    </Storyboard>

                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="EditingState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsEditing, Mode=OneWay}"/>
                    </VisualState.StateTriggers>

                    <Storyboard>

                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="FlipViewPages.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition/>
            <RowDefinition Height="58"/>
        </Grid.RowDefinitions>

        <!-- Top Toolbar -->
        <Frame x:Name="FrameToolbar" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,0,0,1" CornerRadius="8,8,0,0" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
            <interactivity:Interaction.Behaviors>
                <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                    <core:ChangePropertyAction PropertyName="IsEnabled" Value="False"/>
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                    <core:ChangePropertyAction PropertyName="IsEnabled" Value="True"/>
                </core:DataTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock x:Name="HeadingEditor" x:Uid="HeadingEditor" Margin="14,0,0,0" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseTextBlockStyle}" AutomationProperties.HeadingLevel="Level1"/>
                <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}">
                    <controls:SwitchPresenter.ContentTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromVerticalOffset="-32"/>
                        </TransitionCollection>
                    </controls:SwitchPresenter.ContentTransitions>

                    <controls:Case Value="0">
                        <StackPanel x:Name="StackPanelToolbarInitial" Orientation="Horizontal" Loaded="StackPanelToolbarInitial_Loaded">
                            <!-- Crop -->
                            <AppBarButton x:Name="ButtonToolbarCrop" x:Uid="ButtonEditCrop" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.EnterCropModeCommand}" AutomationProperties.Name="{x:Bind ButtonToolbarCrop, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconCrop" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7A8;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconCropDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>
                            </AppBarButton>
                            <!-- Rotate -->
                            <AppBarButton x:Name="ButtonToolbarRotate" x:Uid="ButtonEditRotate" LabelPosition="Collapsed" Style="{ThemeResource AppBarButtonStyleChevron}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="1" RightTapped="AppBarButtonRotate_RightTapped"  AutomationProperties.Name="{x:Bind ButtonToolbarRotate, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconRotate" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7AD;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconRotateDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout x:Name="MenuFlyoutButtonRotate" Placement="Bottom">
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate90" FontWeight="SemiBold" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="1"/>
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate180" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="2"/>
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate270" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="3"/>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <!-- Draw -->
                            <AppBarButton x:Name="ButtonToolbarDraw" x:Uid="ButtonEditDraw" LabelPosition="Collapsed" Command="{x:Bind ViewModel.EnterDrawModeCommand}" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" AutomationProperties.Name="{x:Bind ButtonToolbarDraw, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconDraw" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEDC6;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconDrawDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>
                            </AppBarButton>
                            <AppBarSeparator/>
                            <!-- Rename -->
                            <AppBarButton x:Name="ButtonToolbarRename" x:Uid="ButtonEditRename" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarRename_Click" AutomationProperties.Name="{x:Bind ButtonToolbarRename, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconRename" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8AC;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconRenameDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <Flyout x:Name="FlyoutRename">
                                        <Grid MinWidth="250" MaxWidth="250" ColumnSpacing="6">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock x:Uid="HeadingDialogRename" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource BaseTextBlockStyle}" AutomationProperties.HeadingLevel="Level1"/>
                                            <TextBlock x:Uid="TextDialogRename" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource BodyTextBlockStyle}" Margin="0,0,0,12"/>

                                            <TextBox x:Name="TextBoxRename" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,0,0,12" KeyDown="TextBoxRename_KeyDown" Loaded="TextBoxRename_Loaded" TextChanged="TextBoxRename_TextChanged" />
                                            <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,0,12" Text="{x:Bind ViewModel.ScanResult.ScanResultFormatString, Mode=OneWay}" />
                                            
                                            <HyperlinkButton Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Command="{x:Bind ViewModel.SettingsFileNamingRequestCommand}" Click="HyperlinkButtonFileNamingSettings_Click">
                                                <StackPanel Orientation="Horizontal">
                                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" FontSize="16" Glyph="&#xE713;" Margin="0,0,12,0"/>
                                                    <TextBlock x:Uid="ButtonDialogRenameFileNamingSettings" TextWrapping="WrapWholeWords"/>
                                                </StackPanel>
                                            </HyperlinkButton>

                                            <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,16,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Button x:Name="ButtonRenameConfirm" x:Uid="ButtonDialogRenameConfirm" Grid.Column="0" Margin="0,0,3,0" HorizontalAlignment="Stretch" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.RenameCommand}" CommandParameter="{x:Bind TextBoxRename.Text, Mode=OneWay}" Click="ButtonRename_Click"/>
                                                <Button x:Uid="ButtonDialogRenameCancel" Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Stretch" Click="ButtonRenameCancel_Click"/>
                                            </Grid>

                                            <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,16,0,0" ColumnSpacing="8" Visibility="{x:Bind ButtonRenameConfirm.IsEnabled, Mode=OneWay, Converter={StaticResource NegativeBoolVisibilityConverter}}" HorizontalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>

                                                <FontIcon Grid.Column="0" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEA39;" FontSize="16" Foreground="{ThemeResource SystemFillColorCriticalBrush}" VerticalAlignment="Center" />
                                                <TextBlock Grid.Column="1" x:Uid="ErrorMessageRenameInvalidFileName" Foreground="{ThemeResource SystemFillColorCriticalBrush}" Style="{StaticResource CaptionTextBlockStyle}" />
                                            </Grid>
                                        </Grid>
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <!-- Delete -->
                            <AppBarButton x:Name="ButtonToolbarDelete" x:Uid="ButtonEditDelete" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarDelete_Click" AutomationProperties.Name="{x:Bind ButtonToolbarDelete, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconDelete" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74D;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconDeleteDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <Flyout x:Name="FlyoutDelete">
                                        <Grid MinWidth="250" MaxWidth="250">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <TextBlock x:Uid="HeadingDialogDelete" Grid.Row="0" Grid.ColumnSpan="2" Style="{StaticResource BaseTextBlockStyle}" AutomationProperties.HeadingLevel="Level1"/>
                                            <TextBlock x:Uid="TextDialogDelete" Grid.Row="1" Grid.ColumnSpan="2" Style="{StaticResource BodyTextBlockStyle}" Margin="0,0,0,16"/>

                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Button x:Uid="ButtonDialogDeleteConfirm" Grid.Column="0" Margin="0,0,3,0" HorizontalAlignment="Stretch" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.DeleteCommand}" Click="ButtonDelete_Click"/>
                                                <Button x:Uid="ButtonDialogDeleteCancel" Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Stretch" Click="ButtonDeleteCancel_Click"/>
                                            </Grid>
                                        </Grid>
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <AppBarSeparator/>
                            <!-- Copy -->
                            <AppBarButton x:Name="ButtonToolbarCopy" x:Uid="ButtonEditCopy" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.CopyCommand}" AutomationProperties.Name="{x:Bind ButtonToolbarCopy, Converter={StaticResource ToolTipConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconCopy" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8C8;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconCopyDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <AppBarButton.KeyboardAccelerators>
                                    <KeyboardAccelerator Key="C" Modifiers="Control"/>
                                </AppBarButton.KeyboardAccelerators>
                            </AppBarButton>
                            <!-- Open with -->
                            <AppBarButton x:Name="ButtonToolbarOpenWith" x:Uid="ButtonEditOpenWith" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarOpenWith_Click" AutomationProperties.Name="{x:Bind ButtonToolbarOpenWith, Converter={StaticResource ToolTipConverter}}">
                                <AppBarButton.Icon>
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7AC;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <!-- Share -->
                            <AppBarButton x:Name="ButtonToolbarShare" x:Uid="ButtonEditShare" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.ShareCommand}" AutomationProperties.Name="{x:Bind ButtonToolbarShare, Converter={StaticResource ToolTipConverter}}">
                                <AppBarButton.Icon>
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE72D;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </StackPanel>
                    </controls:Case>

                    <controls:Case Value="1">

                    </controls:Case>

                    <controls:Case Value="2">

                    </controls:Case>
                </controls:SwitchPresenter>

                <!-- Dynamic content -->
                <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}">
                    <!-- Initial -->
                    <controls:Case Value="0">

                    </controls:Case>

                    <!-- Crop -->
                    <controls:Case Value="1">
                        <StackPanel x:Name="StackPanelToolbarCrop" Orientation="Horizontal" Loaded="StackPanelToolbarCrop_Loaded">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="-16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>

                                <TextBlock x:Uid="HeadingEditCrop" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" FontWeight="SemiBold" AutomationProperties.HeadingLevel="Level1"/>
                                <AppBarSeparator Margin="16,0,12,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>

                                <AppBarToggleButton x:Name="AppBarToggleButtonAspectRatio" x:Uid="ButtonEditCropAspectRatio" Style="{ThemeResource AppBarToggleButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" IsChecked="{x:Bind ViewModel.IsFixedAspectRatioSelected, Mode=OneWay}" Click="AppBarToggleButtonAspectRatio_Click" Checked="AppBarToggleButtonAspectRatio_IsCheckedChanged" Unchecked="AppBarToggleButtonAspectRatio_IsCheckedChanged" AutomationProperties.Name="{x:Bind AppBarToggleButtonAspectRatio, Converter={StaticResource ToolTipConverter}}">
                                    <AppBarToggleButton.Icon>
                                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE799;" FontSize="16"/>
                                    </AppBarToggleButton.Icon>

                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout x:Name="MenuFlyoutAspectRatio" Placement="Bottom">
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioCustom" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=0}" FontWeight="SemiBold" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="0"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioSquare" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=1}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="1"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio3by2" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=2}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="2"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio4by3" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=3}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="3"/>
                                            <MenuFlyoutItem x:Uid="ButtonEditCropAspectRatioFlip" Icon="Orientation" Click="MenuFlyoutItemCropAspectRatioFlip_Click"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioInternational" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioInternationalDINA" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=4}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="4"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioNA" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIA" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=5}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="5"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIB" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=6}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="6"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIC" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=7}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="7"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNALegal" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=12}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="12"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioChinese" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai4" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=8}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="8"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai8" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=9}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="9"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai16" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=10}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="10"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai32" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=11}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="11"/>
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>
                                </AppBarToggleButton>
                            </StackPanel>
                        </StackPanel>
                    </controls:Case>

                    <!-- Draw -->
                    <controls:Case Value="2">
                        <StackPanel x:Name="StackPanelToolbarDraw" Orientation="Horizontal" Loaded="StackPanelToolbarDraw_Loaded">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="-16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>

                                <TextBlock x:Uid="HeadingEditDraw" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" FontWeight="SemiBold" AutomationProperties.HeadingLevel="Level1"/>
                                <AppBarSeparator Margin="12,0,12,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>

                                <InkToolbar InitialControls="PensOnly" TargetInkCanvas="{x:Bind InkCanvasEditDraw}">
                                    <InkToolbarEraserButton/>
                                </InkToolbar>
                                <AppBarToggleButton x:Name="ButtonDrawTouch" x:Uid="ButtonEditDrawTouch" LabelPosition="Collapsed" Style="{StaticResource AppBarToggleButtonStyleCompact}" Visibility="{x:Bind ViewModel.IsDeviceTouchEnabled, Mode=OneWay}" IsChecked="{x:Bind ViewModel.IsTouchDrawingEnabled, Mode=TwoWay}" AutomationProperties.Name="{x:Bind ButtonDrawTouch, Converter={StaticResource ToolTipConverter}}">
                                    <AppBarToggleButton.Icon>
                                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xED5F;"/>
                                    </AppBarToggleButton.Icon>
                                </AppBarToggleButton>
                            </StackPanel>
                        </StackPanel>
                    </controls:Case>
                </controls:SwitchPresenter>
            </StackPanel>
        </Frame>

        <!-- Content -->
        <Grid x:Name="GridContent" Grid.Row="1">
            <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}">
                <controls:SwitchPresenter.ContentTransitions>
                    <TransitionCollection>
                        <AddDeleteThemeTransition/>
                    </TransitionCollection>
                </controls:SwitchPresenter.ContentTransitions>

                <controls:Case Value="0">
                    <FlipView x:Name="FlipViewPages" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" CornerRadius="0" Style="{StaticResource FlipViewStyleRoundedButtons}" ItemsSource="{x:Bind ViewModel.ScanResult.Elements, Mode=OneWay, FallbackValue={x:Null}}" SelectedItem="{x:Bind ViewModel.SelectedPage, Mode=TwoWay}" SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}" SelectionChanged="FlipViewPages_SelectionChanged">
                        <FlipView.ItemTemplate>
                            <DataTemplate x:DataType="scanner:ScanResultElement">
                                <ScrollViewer x:Name="ScrollViewerFlipViewPages" ZoomMode="Enabled" MinZoomFactor="1" MaxZoomFactor="2.5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" ZoomSnapPointsType="Mandatory" Loading="ScrollViewerZoomable_Loading" ViewChanging="ScrollViewerFlipViewPages_ViewChanging" AutomationProperties.Name="{x:Bind ItemDescriptor}">
                                    <controls:ImageEx Source="{x:Bind CachedImage, Mode=OneWay}" Loaded="ImageEx_Loaded" AutomationProperties.AccessibilityView="Raw"/>
                                </ScrollViewer>
                            </DataTemplate>
                        </FlipView.ItemTemplate>
                    </FlipView>
                </controls:Case>

                <controls:Case Value="1">
                    <controls:ImageCropper x:Name="ImageCropperPage" AspectRatio="{x:Bind ViewModel.SelectedAspectRatioValue, Mode=OneWay}" PrimaryThumbStyle="{StaticResource ImageCropperThumbStyleAcrylic}" SecondaryThumbStyle="{StaticResource ImageCropperThumbStyleAcrylic}" CropShape="Rectangular" ThumbPlacement="All" Padding="32" Background="Transparent" RenderTransformOrigin="0.5,0.5" Loaded="ImageCropper_Loaded" Unloaded="ImageCropperPage_Unloaded">
                        <controls:ImageCropper.Mask>
                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                        </controls:ImageCropper.Mask>
                    </controls:ImageCropper>
                </controls:Case>

                <controls:Case Value="2">
                    <ScrollViewer x:Name="ScrollViewerEditDraw" ZoomMode="Enabled" MinZoomFactor="1" MaxZoomFactor="2.5" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Loading="ScrollViewerZoomable_Loading" ViewChanging="ScrollViewerEditDraw_ViewChanging">
                        <Grid>
                            <controls:ImageEx x:Name="ImageExDraw" Source="{x:Bind ViewModel.SelectedPage.CachedImage, Mode=OneWay}" Loaded="ImageExDraw_Loaded"/>
                            <Viewbox x:Name="ViewboxEditDraw" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{x:Bind ScrollViewerEditDraw.ViewportWidth, Mode=OneWay}" MaxWidth="{x:Bind ScrollViewerEditDraw.ViewportWidth, Mode=OneWay}" Height="{x:Bind ScrollViewerEditDraw.ViewportHeight, Mode=OneWay}" MaxHeight="{x:Bind ScrollViewerEditDraw.ViewportHeight, Mode=OneWay}">
                                <InkCanvas x:Name="InkCanvasEditDraw"/>
                            </Viewbox>
                        </Grid>
                    </ScrollViewer>
                </controls:Case>
            </controls:SwitchPresenter>
            
            <!-- Scan animation -->
            <Grid x:Name="GridLoading" Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.5" From="0.0" To="1.0"/>
                </animations:Implicit.ShowAnimations>

                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.5" To="0.0"/>
                </animations:Implicit.HideAnimations>

                <Grid x:Name="GridScanning" Visibility="{x:Bind ViewModel.IsScanning, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Loaded="GridScanning_Loaded" SizeChanged="GridScanning_SizeChanged">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsScanning, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                            <behaviors:StartAnimationAction Animation="{x:Bind ScanningAnimation}"/>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsScanning, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                            <core:CallMethodAction TargetObject="{x:Bind ScanningAnimation}" MethodName="Stop"/>
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.5" From="0.0" To="1.0"/>
                    </animations:Implicit.ShowAnimations>

                    <animations:Implicit.HideAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.5" To="0.0"/>
                    </animations:Implicit.HideAnimations>

                    <Frame HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Rectangle HorizontalAlignment="Stretch" Height="80" VerticalAlignment="Top" Fill="{ThemeResource SystemAccentColor}" Visibility="{x:Bind ViewModel.ShowAnimations, Mode=OneWay}">
                            <animations:Implicit.HideAnimations>
                                <animations:OpacityAnimation Duration="0:0:0.2" To="0.0"/>
                            </animations:Implicit.HideAnimations>

                            <animations:Explicit.Animations>
                                <animations:AnimationSet x:Name="ScanningAnimation">
                                    <animations:AnimationScope>
                                        <animations:OpacityAnimation Duration="0:0:0.6" From="0.0" To="0.2" DelayBehavior="SetInitialValueBeforeDelay"/>
                                        <animations:TranslationAnimation Duration="0:0:6" Repeat="Forever" DelayBehavior="SetInitialValueBeforeDelay">
                                            <animations:Vector3KeyFrame Key="0.0" Value="0,0,0" EasingMode="EaseInOut" EasingType="Cubic"/>
                                            <animations:Vector3KeyFrame x:Name="KeyFrameScanningAnimation" Key="0.5" Value="0,0,0" EasingMode="EaseInOut" EasingType="Cubic"/>
                                            <animations:Vector3KeyFrame Key="1.0" Value="0,0,0" EasingMode="EaseInOut" EasingType="Cubic"/>
                                        </animations:TranslationAnimation>
                                    </animations:AnimationScope>
                                </animations:AnimationSet>
                            </animations:Explicit.Animations>
                        </Rectangle>
                    </Frame>

                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource SystemControlAcrylicElementBrush}"/>
                </Grid>
                
                <!-- Loading blur -->
                <Frame HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <media:UIElementExtensions.VisualFactory>
                        <media:PipelineVisualFactory>
                            <media:BlurEffect Amount="10"/>
                        </media:PipelineVisualFactory>
                    </media:UIElementExtensions.VisualFactory>
                </Frame>
                
                <!-- Tint -->
                <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.3" />

                <!-- Loading indicator -->
                <Grid RowSpacing="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="24" />
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="0" Fill="{ThemeResource SystemControlAcrylicElementBrush}" Width="52" Height="52"  HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="{ThemeResource CardStrokeColorDefaultBrush}" StrokeThickness="1" />
                    <muxc:ProgressRing Grid.Row="0" x:Name="ProgressRingLoadingIndeterminate" IsIndeterminate="True" Width="44" Height="44" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.Progress.Progress, Mode=OneWay, Converter={StaticResource NullVisibilityConverter}}" />
                    <muxc:ProgressRing Grid.Row="0" x:Name="ProgressRingLoadingDeterminate" IsIndeterminate="False" Value="{x:Bind (x:Int32)ViewModel.Progress.Progress, Mode=OneWay}" Width="44" Height="44" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.Progress.Progress, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}" />

                    <controls:SwitchPresenter x:Name="SwitchPresenterProgressState" Grid.Row="1" Visibility="{x:Bind ViewModel.Progress, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
                        <controls:SwitchPresenter.ContentTransitions>
                            <TransitionCollection>
                                <EntranceThemeTransition FromVerticalOffset="-16" />
                            </TransitionCollection>
                        </controls:SwitchPresenter.ContentTransitions>

                        <controls:Case Value="Scanning">
                            <TextBlock x:Uid="TextScanProgressScanning" Style="{StaticResource BaseTextBlockStyle}" />
                        </controls:Case>

                        <controls:Case Value="Processing">
                            <TextBlock x:Uid="TextScanProgressProcessing" Style="{StaticResource BaseTextBlockStyle}" />
                        </controls:Case>

                        <controls:Case Value="AutomaticRotation">
                            <TextBlock x:Uid="TextScanProgressAutomaticRotation" Style="{StaticResource BaseTextBlockStyle}" />
                        </controls:Case>

                        <controls:Case Value="PdfGeneration">
                            <TextBlock x:Uid="TextScanProgressPdfGeneration" Style="{StaticResource BaseTextBlockStyle}" />
                        </controls:Case>

                        <controls:Case Value="Saving">

                        </controls:Case>

                        <controls:Case Value="Finishing">
                            <TextBlock x:Uid="TextScanProgressFinishing" Style="{StaticResource BaseTextBlockStyle}" />
                        </controls:Case>
                    </controls:SwitchPresenter>
                </Grid>
            </Grid>
        </Grid>

        <!-- Footer -->
        <Frame x:Name="FrameFooter" Grid.Row="2" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,1,0,0" Padding="6,0,6,0" CornerRadius="0,0,8,8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
            <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}" HorizontalContentAlignment="Stretch">
                <controls:SwitchPresenter.ContentTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition FromVerticalOffset="32"/>
                    </TransitionCollection>
                </controls:SwitchPresenter.ContentTransitions>

                <!-- Initial -->
                <controls:Case Value="0">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
                                <TextBlock x:Name="TextBlockPageIndicator" Text="{x:Bind ViewModel.SelectedPageText, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" TextAlignment="Left" MaxLines="1" Padding="12,0,12,0" Visibility="{x:Bind FlipViewPages.Visibility, Mode=OneWay}"/>
                                <AppBarSeparator Visibility="{x:Bind TextBlockPageIndicator.Visibility, Mode=OneWay}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
                                <AppBarSeparator Visibility="{x:Bind TextBlockPageIndicator.Visibility, Mode=OneWay}"/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                    <TextBlock x:Name="TextBlockZoomFactor" Style="{StaticResource BodyTextBlockStyle}" Margin="12,0,12,0" Text="100 %" TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" MaxLines="1" MinWidth="40"/>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                        <AppBarButton x:Name="ButtonZoomIn" x:Uid="ButtonZoomIn" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.IsScanning, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0" Click="ButtonZoomInOut_Click" AutomationProperties.Name="{x:Bind ButtonZoomIn, Converter={StaticResource ToolTipConverter}}">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE710;" FontSize="16"/>
                                        </AppBarButton>
                                        <AppBarButton x:Name="ButtonZoomOut" x:Uid="ButtonZoomOut" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.IsScanning, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0" Click="ButtonZoomInOut_Click" AutomationProperties.Name="{x:Bind ButtonZoomOut, Converter={StaticResource ToolTipConverter}}">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE738;" FontSize="16"/>
                                        </AppBarButton>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>

                        <muxc:PipsPager MaxVisiblePips="10" NumberOfPages="{x:Bind ViewModel.ScanResult.Elements.Count, Mode=OneWay, FallbackValue=0}" SelectedPageIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=OneWay}" IsEnabled="{x:Bind ViewModel.IsScanning, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center" PreviousButtonVisibility="VisibleOnPointerOver" NextButtonVisibility="VisibleOnPointerOver" SelectedIndexChanged="PipsPager_SelectedIndexChanged"/>
                    </Grid>

                </controls:Case>

                <!-- Crop -->
                <controls:Case Value="1">
                    <Frame x:Name="FrameFooterCrop" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Frame IsEnabled="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}">
                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="40">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="ButtonCropSimilarPages" Grid.Column="0" VerticalAlignment="Stretch" Margin="0,0,6,0" IsEnabled="{x:Bind ViewModel.SimilarPagesForCrop, Mode=OneWay, Converter={StaticResource ListNotNullOrEmptyConverter}}" Click="ButtonCropSimilarPages_Click" AutomationProperties.Name="{x:Bind ButtonCropSimilarPages, Converter={StaticResource ToolTipConverter}}">
                                    <Grid Padding="6,0,6,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <FontIcon Grid.Column="0" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xF168;" FontSize="16" Margin="0,0,12,0"/>
                                        <TextBlock Grid.Column="1" x:Uid="ButtonEditCropSimilarPages" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                    </Grid>

                                    <FlyoutBase.AttachedFlyout>
                                        <Flyout x:Name="FlyoutCropSimilarPages">
                                            <Grid MinWidth="300" MaxWidth="300">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Uid="HeadingEditCropSimilarPages" Style="{StaticResource BaseTextBlockStyle}"/>
                                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Uid="TextEditCropSimilarPages" Style="{StaticResource BodyTextBlockStyle}" Margin="0,0,0,12"/>

                                                <ListView Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" SelectionMode="Multiple" Margin="0,0,0,8" ScrollViewer.VerticalScrollMode="Disabled">
                                                    <ListViewItem IsSelected="True" IsEnabled="False">
                                                        <Grid Margin="0,6,24,6" ColumnSpacing="3">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>

                                                            <controls:ImageEx Grid.Column="0" Source="{x:Bind ViewModel.SelectedPage.Thumbnail, Mode=OneWay}" MaxWidth="100" MaxHeight="100" HorizontalAlignment="Center" CornerRadius="{StaticResource ControlCornerRadius}"/>
                                                            <TextBlock Grid.Column="1" Text="{x:Bind ViewModel.SelectedPage.ItemDescriptor, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="WrapWholeWords" MaxLines="2" TextTrimming="Clip" ToolTipService.ToolTip="{x:Bind ViewModel.SelectedPage.ItemDescriptor, Mode=OneWay}"/>
                                                        </Grid>
                                                    </ListViewItem>
                                                </ListView>
                                                <MenuFlyoutSeparator Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"/>
                                                <CheckBox x:Name="CheckBoxCropSimilarPagesSelectAll" x:Uid="OptionEditCropSimilarPagesSelectAll" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Content="Select all" Margin="14,8,14,0" Padding="12,0,12,0" VerticalContentAlignment="Center" IsThreeState="True" Checked="CheckBoxCropSimilarPagesSelectAll_Checked" Unchecked="CheckBoxCropSimilarPagesSelectAll_Unchecked" Indeterminate="CheckBoxCropSimilarPagesSelectAll_Indeterminate" />
                                                <ListView x:Name="ListViewCropSimilarPages" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Margin="-16,8,-16,0" Padding="16,0,16,0" ItemsSource="{x:Bind ViewModel.SimilarPagesForCrop, Mode=OneWay}" SelectionMode="Multiple" MaxHeight="300" ScrollViewer.VerticalScrollMode="Auto" SelectionChanged="ListViewCropSimilarPages_SelectionChanged">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate x:DataType="scanner:ScanResultElement">
                                                            <ListViewItem x:Name="ListViewItemCropSimilarPages">
                                                                <Grid Margin="0,6,24,6" ColumnSpacing="3">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition/>
                                                                    </Grid.ColumnDefinitions>

                                                                    <controls:ImageEx Grid.Column="0" Source="{x:Bind Thumbnail, Mode=OneWay}" MaxWidth="100" MaxHeight="100" HorizontalAlignment="Center" CornerRadius="{StaticResource ControlCornerRadius}"/>
                                                                    <TextBlock Grid.Column="1" Text="{x:Bind ItemDescriptor, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="WrapWholeWords" MaxLines="2" TextTrimming="Clip" ToolTipService.ToolTip="{x:Bind ItemDescriptor, Mode=OneWay}"/>
                                                                </Grid>
                                                            </ListViewItem>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>

                                                <Grid Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,16,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>

                                                    <Button Grid.Column="0" x:Uid="ButtonEditCropSimilarPagesConfirm" Margin="0,0,3,0" HorizontalAlignment="Stretch" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.CropPagesCommand}" CommandParameter="{x:Bind ImageCropperPage}" IsEnabled="{x:Bind ViewModel.SelectedRangesCropSimilarPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Click="ButtonCropSimilarPagesSave_Click"/>
                                                    <Button Grid.Column="1" x:Uid="ButtonEditCropSimilarPagesCancel" Margin="3,0,0,0" HorizontalAlignment="Stretch" Click="ButtonCropSimilarPagesCancel_Click"/>
                                                </Grid>
                                            </Grid>
                                        </Flyout>
                                    </FlyoutBase.AttachedFlyout>
                                </Button>
                                <AppBarSeparator Grid.Column="1"/>
                                <Button Grid.Column="2" x:Uid="ButtonEditSave" Style="{ThemeResource AccentButtonStyle}" VerticalAlignment="Stretch" Margin="6,0,3,0" Command="{x:Bind ViewModel.CropPageCommand}" CommandParameter="{x:Bind ImageCropperPage}">
                                    <Grid>
                                        <StackPanel Orientation="Horizontal" Margin="6,0,6,0" VerticalAlignment="Center">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74E;" FontSize="16" Margin="0,0,12,0"/>
                                            <TextBlock x:Uid="TextEditSave" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </Button>
                                <Button x:Name="ButtonFooterCropSaveCopy" Grid.Column="3" x:Uid="ButtonEditSaveCopy" VerticalAlignment="Stretch" Margin="3,0,3,0" Command="{x:Bind ViewModel.CropPageAsCopyCommand}" CommandParameter="{x:Bind ImageCropperPage}" AutomationProperties.Name="{x:Bind ButtonFooterCropSaveCopy, Converter={StaticResource ToolTipConverter}}">
                                    <Grid Padding="0" Margin="0">
                                        <FontIcon x:Name="FontIconCropAsCopy" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEA35;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                            <FontIcon.RenderTransform>
                                                <CompositeTransform ScaleX="1" ScaleY="1"/>
                                            </FontIcon.RenderTransform>
                                        </FontIcon>
                                        <FontIcon x:Name="FontIconCropAsCopyDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                            <FontIcon.RenderTransform>
                                                <CompositeTransform ScaleX="0" ScaleY="0"/>
                                            </FontIcon.RenderTransform>
                                        </FontIcon>
                                    </Grid>
                                </Button>
                                <Button x:Name="ButtonFooterCropDiscard" Grid.Column="4" x:Uid="ButtonEditDiscard" VerticalAlignment="Stretch" Margin="3,0,0,0" Command="{x:Bind ViewModel.LeaveCropModeCommand}" AutomationProperties.Name="{x:Bind ButtonFooterCropDiscard, Converter={StaticResource ToolTipConverter}}">
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE711;" FontSize="16"/>
                                </Button>
                            </Grid>
                        </Frame>
                    </Frame>
                </controls:Case>

                <!-- Draw -->
                <controls:Case Value="2">
                    <Frame x:Name="FrameFooterDraw" IsEnabled="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay, Converter={StaticResource NegativeBoolConverter}}" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                        <Grid x:Name="GridFooterDraw" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" SizeChanged="GridFooterDraw_SizeChanged">
                            <Grid x:Name="GridFooterDrawButtons" HorizontalAlignment="Left" Height="40">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" x:Uid="ButtonEditSave" Style="{ThemeResource AccentButtonStyle}" VerticalAlignment="Stretch" Margin="6,0,3,0" Command="{x:Bind ViewModel.DrawOnPageCommand}" CommandParameter="{x:Bind InkCanvasEditDraw}" Click="EditorDrawAboutToBeDismissed">
                                    <Grid>
                                        <StackPanel Orientation="Horizontal" Margin="6,0,6,0" VerticalAlignment="Center">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74E;" FontSize="16" Margin="0,0,12,0"/>
                                            <TextBlock x:Uid="TextEditSave" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>
                                </Button>
                                <Button x:Name="ButtonFooterDrawSaveCopy" Grid.Column="1" x:Uid="ButtonEditSaveCopy" VerticalAlignment="Stretch" Margin="3,0,3,0" Command="{x:Bind ViewModel.DrawOnPageAsCopyCommand}" CommandParameter="{x:Bind InkCanvasEditDraw}" AutomationProperties.Name="{x:Bind ButtonFooterDrawSaveCopy, Converter={StaticResource ToolTipConverter}}">
                                    <Grid Padding="0" Margin="0">
                                        <FontIcon x:Name="FontIconDrawAsCopy" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEA35;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                            <FontIcon.RenderTransform>
                                                <CompositeTransform ScaleX="1" ScaleY="1"/>
                                            </FontIcon.RenderTransform>
                                        </FontIcon>
                                        <FontIcon x:Name="FontIconDrawAsCopyDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                            <FontIcon.RenderTransform>
                                                <CompositeTransform ScaleX="0" ScaleY="0"/>
                                            </FontIcon.RenderTransform>
                                        </FontIcon>
                                    </Grid>
                                </Button>
                                <Button x:Name="ButtonFooterDrawDiscard" Grid.Column="2" x:Uid="ButtonEditDiscard" VerticalAlignment="Stretch" Margin="3,0,0,0" Command="{x:Bind ViewModel.LeaveDrawModeCommand}" Click="EditorDrawAboutToBeDismissed" AutomationProperties.Name="{x:Bind ButtonFooterDrawDiscard, Converter={StaticResource ToolTipConverter}}">
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE711;" FontSize="16"/>
                                </Button>
                            </Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                                <AppBarSeparator Visibility="{x:Bind TextBlockPageIndicator.Visibility, Mode=OneWay}"/>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                    <TextBlock x:Name="TextBlockZoomFactorDraw" Style="{StaticResource BodyTextBlockStyle}" Text="100 %" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" MaxLines="1" MinWidth="60"/>
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                        <AppBarButton x:Name="ButtonZoomInDraw" x:Uid="ButtonZoomIn" LabelPosition="Collapsed" IsEnabled="True" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0" Click="ButtonZoomInOut_Click" AutomationProperties.Name="{x:Bind ButtonZoomInDraw, Converter={StaticResource ToolTipConverter}}">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE710;" FontSize="16"/>
                                        </AppBarButton>
                                        <AppBarButton x:Name="ButtonZoomOutDraw" x:Uid="ButtonZoomOut" LabelPosition="Collapsed" IsEnabled="True" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0" Click="ButtonZoomInOut_Click" AutomationProperties.Name="{x:Bind ButtonZoomOutDraw, Converter={StaticResource ToolTipConverter}}">
                                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE738;" FontSize="16"/>
                                        </AppBarButton>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Frame>
                </controls:Case>
            </controls:SwitchPresenter>
        </Frame>
    </Grid>
</Page>
