<Page
    x:Class="Scanner.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:converters="using:Scanner.Views.Converters"
    xmlns:muxcWindows11Present="using:Microsoft.UI.Xaml.Controls?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 14)"
    xmlns:windows11NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract, 14)"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:lottie="using:Microsoft.Toolkit.Uwp.UI.Lottie"
    xmlns:helpers="using:Scanner.Helpers"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    muxcWindows11Present:BackdropMaterial.ApplyToRootOrPageBackground="True"
    windows11NotPresent:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignWidth="800"
    d:DesignHeight="600"
    
    Loaded="Page_Loaded">

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.ViewLoadedCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Page.DataContext>
        <viewModels:ShellViewModel x:Name="ViewModel"/>
    </Page.DataContext>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- XAML Converters -->
            <converters:WindowStateOpacityConverter x:Key="WindowStateOpacityConverter"/>
            <converters:ScanSaveLocationGlyphConverter x:Key="ScanSaveLocationGlyphConverter"/>
            <converters:AppWideMessageSeverityInfoBarConverter x:Key="AppWideMessageSeverityInfoBarConverter"/>
            <converters:StringNotEmptyVisibilityConverter x:Key="StringNotEmptyVisibilityConverter"/>
            <converters:NotZeroVisibilityConverter x:Key="NotZeroVisibilityConverter"/>
            <converters:VisibilityOpacityConverter x:Key="VisibilityOpacityConverter"/>
            <converters:ToolTipConverter x:Key="ToolTipConverter"/>
            
            <!-- Storyboards -->
            
        </ResourceDictionary>
    </Page.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  PAGE CONTENT  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <Grid x:Name="GridMain" FlowDirection="{x:Bind ViewModel.AccessibilityService.DefaultFlowDirection}" SizeChanged="GridMain_SizeChanged">
        <!-- VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup" CurrentStateChanging="VisualStateGroup_CurrentStateChanging">
                <VisualState x:Name="NarrowStateEditor">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind NavigationViewItemMainEditor.IsSelected, Mode=OneWay}"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentSecond.MaxWidth" Value="775"/>
                        <Setter Target="ColumnMainContentFirst.Width" Value="0"/>
                        <Setter Target="ColumnMainContentFirst.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="NavigationViewMain.PaneDisplayMode" Value="Top"/>
                        <Setter Target="GridMainContent.Padding" Value="0"/>
                        <Setter Target="NavigationViewItemMainEditor.IsEnabled" Value="True"/>
                        <Setter Target="NavigationViewItemMainEditor.Visibility" Value="Visible"/>
                        <Setter Target="FrameMainContentSecond.CornerRadius" Value="8,8,0,0"/>
                        <Setter Target="FrameMainContentSecond.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="FrameMainContentSecond.Margin" Value="0"/>
                        <Setter Target="FrameMainContentSecond.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                        <Setter Target="FrameMainContentThird.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="InfoBarAppWideMessages.Margin" Value="0,-1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.CornerRadius" Value="0,0,8,8"/>
                        <Setter Target="InfoBarAppWideMessages.(Grid.ColumnSpan)" Value="3"/>
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentFirst.MaxWidth" Value="775"/>
                        <Setter Target="ColumnMainContentSecond.Width" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="NavigationViewMain.PaneDisplayMode" Value="Top"/>
                        <Setter Target="GridMainContent.Padding" Value="0"/>
                        <Setter Target="NavigationViewItemMainEditor.IsEnabled" Value="True"/>
                        <Setter Target="NavigationViewItemMainEditor.Visibility" Value="Visible"/>
                        <Setter Target="FrameMainContentFirst.CornerRadius" Value="8,8,0,0"/>
                        <Setter Target="FrameMainContentFirst.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="FrameMainContentSecond.Content" Value="{x:Null}"/>
                        <Setter Target="FrameMainContentSecond.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                        <Setter Target="FrameMainContentThird.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="InfoBarAppWideMessages.Margin" Value="0,-1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.CornerRadius" Value="0,0,8,8"/>
                        <Setter Target="InfoBarAppWideMessages.(Grid.ColumnSpan)" Value="3"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="AdaptiveTriggerDefaultState" MinWindowWidth="775"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentSecond.Width" Value="7*"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                        <Setter Target="NavigationViewItemMainPageList.InfoBadge" Value="{x:Null}"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1750"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="50">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="NavigationViewItemMainPageList.IsEnabled" Value="False"/>
                        <Setter Target="NavigationViewItemMainPageList.InfoBadge" Value="{x:Null}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.BackgroundTransition>
            <BrushTransition/>
        </Grid.BackgroundTransition>

        <Frame x:Name="FrameFallbackBackground" Grid.Row="0" Grid.RowSpan="2" windows11NotPresent:Background="{ThemeResource SystemAccentColor}" Opacity="0.05" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        <TextBlock x:Name="TextBlockNarratorStatus" Visibility="Collapsed" AutomationProperties.LiveSetting="Assertive" Text="{x:Bind ViewModel.NarratorStatusText, Mode=OneWay}"/>

        <!-- Titlebar -->
        <Grid x:Name="GridTitlebar" Grid.Row="0" HorizontalAlignment="Stretch" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, ConverterParameter=1.0, FallbackValue=1.0}" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition x:Name="ColumnTitlebarButtons"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" x:Uid="ImageAppLogo" Source="/Assets/Logo small.svg" HorizontalAlignment="Center" Margin="0,8,0,8"/>
            <TextBlock Grid.Column="1" x:Uid="HeadingScanner" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
            <TextBlock Grid.Column="2" Text="-" Margin="6,0,6,0" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Visibility="{x:Bind ViewModel.TitlebarText, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}"/>
            <Border Grid.Column="3" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="8,3,8,3" Background="{ThemeResource SystemControlBackgroundAltMediumLowBrush}" CornerRadius="{StaticResource OverlayCornerRadius}" Visibility="{x:Bind ViewModel.TitlebarText, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}">
                <TextBlock Text="{x:Bind ViewModel.TitlebarText, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
            </Border>
        </Grid>

        <!-- Content -->
        <muxc:NavigationView x:Name="NavigationViewMain" Grid.Row="1" PaneDisplayMode="LeftCompact" Style="{StaticResource NavigationViewStyleNoContent}" VerticalAlignment="Stretch" IsPaneToggleButtonVisible="False" IsPaneOpen="False" IsBackButtonVisible="Collapsed" IsSettingsVisible="True" SelectionChanged="NavigationViewMain_SelectionChanged" ItemInvoked="NavigationViewMain_ItemInvoked" AutomationProperties.LandmarkType="Navigation" AutomationProperties.Name="">
            <muxc:NavigationView.Triggers>

            </muxc:NavigationView.Triggers>

            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainScanOptions" x:Uid="ButtonScanOptions" Foreground="{ThemeResource NavigationViewItemForeground}" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainScanOptions, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8FE;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainPageList" x:Uid="ButtonManage" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainPageList, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xF0E2;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>

                    <muxc:NavigationViewItem.RenderTransform>
                        <CompositeTransform TranslateX="0"/>
                    </muxc:NavigationViewItem.RenderTransform>

                    <muxc:NavigationViewItem.InfoBadge>
                        <muxc:InfoBadge x:Name="InfoBadgePageList" Value="{x:Bind ViewModel.NumberOfPages, Mode=OneWay}" Visibility="{x:Bind ViewModel.NumberOfPages, Mode=OneWay, Converter={StaticResource NotZeroVisibilityConverter}}"/>
                    </muxc:NavigationViewItem.InfoBadge>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainEditor" x:Uid="ButtonEditor" IsEnabled="False" Visibility="Collapsed" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainEditor, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE70F;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.MenuItems>

            <muxc:NavigationView.FooterMenuItems>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainSaveLocation" x:Uid="ButtonShowSaveLocation" SelectsOnInvoked="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}"  AutomationProperties.Name="{x:Bind NavigationViewItemMainSaveLocation, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" FontSize="16" Glyph="{x:Bind ViewModel.IsDefaultSaveLocation, Mode=OneWay, Converter={StaticResource ScanSaveLocationGlyphConverter}}"/>
                    </muxc:NavigationViewItem.Icon>

                    <muxc:NavigationViewItem.ContextFlyout>
                        <MenuFlyout>
                            <MenuFlyoutItem x:Uid="ButtonSaveLocationSettings" Command="{x:Bind ViewModel.ShowSaveLocationSettingsCommand}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE713;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </muxc:NavigationViewItem.ContextFlyout>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainHelp" x:Uid="ButtonHelp" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainHelp, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE897;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainDonate" x:Uid="ButtonDonate" SelectsOnInvoked="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainDonate, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xED56;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainOtherApps" x:Uid="ButtonOtherApps" SelectsOnInvoked="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}" AutomationProperties.Name="{x:Bind NavigationViewItemMainOtherApps, Converter={StaticResource ToolTipConverter}}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xECAD;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.FooterMenuItems>

            <Grid x:Name="GridMainContent" Padding="0,0,6,6">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnMainContentFirst" Width="3*" MinWidth="300" MaxWidth="350"/>
                    <ColumnDefinition x:Name="ColumnMainContentSecond" Width="7*"/>
                    <ColumnDefinition x:Name="ColumnMainContentThird" Width="3*" MinWidth="300" MaxWidth="350"/>
                </Grid.ColumnDefinitions>

                <Frame x:Name="FrameMainContentFirst" Grid.Row="0" Grid.Column="0" Background="{ThemeResource LayerFillColorDefaultBrush}" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <PopupThemeTransition FromVerticalOffset="48"/>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>

                <muxc:InfoBar x:Name="InfoBarAppWideMessages" Grid.Row="1" Grid.Column="0" Style="{ThemeResource InfoBarStyleCustom}" IsOpen="True" Title="{x:Bind ViewModel.SelectedStatusMessage.Title, Mode=OneWay}" Message="{x:Bind ViewModel.SelectedStatusMessage.MessageText, Mode=OneWay}" Severity="{x:Bind ViewModel.SelectedStatusMessage.Severity, Mode=OneWay, Converter={StaticResource AppWideMessageSeverityInfoBarConverter}}" Margin="0,6,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" Visibility="{x:Bind ViewModel.StatusMessages.Count, Mode=OneWay, Converter={StaticResource NotZeroVisibilityConverter}, FallbackValue=Collapsed}" Closing="InfoBarAppWideMessages_Closing" PointerWheelChanged="InfoBarAppWideMessages_PointerWheelChanged">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Closing">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.StatusMessageDismissedCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation From="0.0" To="1.0" Duration="0:0:0.3"/>
                        <animations:TranslationAnimation From="0,100" To="0,0" Duration="0:0:0.3" EasingType="Cubic" EasingMode="EaseOut"/>
                    </animations:Implicit.ShowAnimations>

                    <muxc:InfoBar.RenderTransform>
                        <CompositeTransform/>
                    </muxc:InfoBar.RenderTransform>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MaxHeight="48"/>
                            <RowDefinition Height="58"/>
                        </Grid.RowDefinitions>

                        <ScrollViewer Grid.Row="0" MaxHeight="32" Visibility="{x:Bind ViewModel.SelectedStatusMessage.AdditionalText, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}" VerticalScrollBarVisibility="Visible" VerticalScrollMode="Auto" Padding="0,0,12,0">
                            <TextBlock Text="{x:Bind ViewModel.SelectedStatusMessage.AdditionalText, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" MinHeight="32" Foreground="{ThemeResource SystemColorGrayTextBrush}" FontFamily="Consolas" IsTextSelectionEnabled="True"/>
                        </ScrollViewer>
                        <muxc:PipsPager Grid.Row="1" NumberOfPages="{x:Bind ViewModel.StatusMessages.Count, Mode=OneWay}" SelectedPageIndex="{x:Bind ViewModel.SelectedStatusMessageIndex, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" MaxVisiblePips="10" PreviousButtonVisibility="Visible" NextButtonVisibility="Visible"/>
                    </Grid>
                </muxc:InfoBar>

                <Frame x:Name="FrameMainContentSecond" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Background="{ThemeResource LayerFillColorDefaultBrush}" Margin="6,0,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <PopupThemeTransition FromVerticalOffset="48"/>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>
                <Frame x:Name="FrameMainContentThird" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Background="{ThemeResource LayerFillColorDefaultBrush}" Margin="6,0,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="1"/>
            </Grid>
            
            <!-- Debug Flyout -->
            <FlyoutBase.AttachedFlyout>
                <Flyout Placement="Left">
                    <StackPanel Orientation="Vertical" MaxWidth="400">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,16">
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEBE8;" FontSize="16" HorizontalAlignment="Left" Margin="0,0,12,0"/>
                            <TextBlock Text="Get crazy" Style="{StaticResource BaseTextBlockStyle}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Button Content="Crash the app" Command="{x:Bind ViewModel.DebugCrashCommand}"/>
                            <Button Content="Track an exception" Command="{x:Bind ViewModel.DebugTrackErrorCommand}" Margin="6,0,0,0"/>
                        </StackPanel>
                        
                        
                        <StackPanel Orientation="Horizontal" Margin="0,32,0,16">
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEBE8;" FontSize="16" HorizontalAlignment="Left" Margin="0,0,12,0"/>
                            <TextBlock Text="Debug contextual dialogs" Style="{StaticResource BaseTextBlockStyle}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Spacing="6">
                            <Button Content="Tutorial page list" Command="{x:Bind ViewModel.DebugShowTutorialPageListCommand}"/>
                            <Button Content="Changelog" Command="{x:Bind ViewModel.ShowChangelogCommand}"/>
                            <Button Content="Setup" Command="{x:Bind ViewModel.DebugShowSetupCommand}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,6,0,0" Spacing="6">
                            <Button Content="Feedback" Command="{x:Bind ViewModel.DebugShowFeedbackDialogCommand}"/>
                            <Button Content="Updated" Command="{x:Bind ViewModel.DebugShowUpdatedDialogCommand}"/>
                        </StackPanel>
                        

                        <StackPanel Orientation="Horizontal" Margin="0,32,0,16">
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEBE8;" FontSize="16" HorizontalAlignment="Left" Margin="0,0,12,0"/>
                            <TextBlock Text="Debug status messages" Style="{StaticResource BaseTextBlockStyle}"/>
                        </StackPanel>

                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.Title, Mode=TwoWay}" PlaceholderText="Title" Margin="0,0,0,6" Width="300"/>
                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.MessageText, Mode=TwoWay}" PlaceholderText="Message text" AcceptsReturn="True" Margin="0,0,0,6" Width="300"/>
                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.AdditionalText, Mode=TwoWay}" PlaceholderText="Additional text" AcceptsReturn="True" Margin="0,0,0,6" Width="300"/>
                        <ComboBox ItemsSource="{x:Bind ViewModel.DebugStatusMessageSeverities, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.DebugStatusMessage.Severity, Mode=TwoWay}" MinWidth="150"/>

                        <MenuFlyoutSeparator Margin="0,12,0,12"/>

                        <StackPanel Orientation="Horizontal">
                            <Button Content="Broadcast status message" Command="{x:Bind ViewModel.DebugBroadcastStatusMessageCommand}" Style="{StaticResource AccentButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Flyout>
            </FlyoutBase.AttachedFlyout>
        </muxc:NavigationView>

        <muxc:TeachingTip
            x:Name="TeachingTipTutorialPageList"
            x:Uid="DialogTutorialManage"
            Target="{x:Bind NavigationViewItemMainPageList}"
            PreferredPlacement="BottomRight"
            IsLightDismissEnabled="False">
            <muxc:TeachingTip.HeroContent>
                <Frame CornerRadius="{StaticResource OverlayCornerRadius}" Padding="8" Height="150">
                    <muxc:AnimatedVisualPlayer PlaybackRate="0.5" AutoPlay="{x:Bind ViewModel.ShowAnimations, Mode=OneWay}">
                        <lottie:LottieVisualSource UriSource="ms-appx:///Assets/AnimatedVisuals/92923-loading-squares.json"/>
                    </muxc:AnimatedVisualPlayer>
                </Frame>
            </muxc:TeachingTip.HeroContent>
        </muxc:TeachingTip>

        <muxc:TeachingTip
            x:Name="TeachingTipFeedback"
            x:Uid="DialogFeedback"
            IsLightDismissEnabled="False">
            <muxc:TeachingTip.IconSource>
                <muxc:FontIconSource Glyph="&#xE939;"/>
            </muxc:TeachingTip.IconSource>

            <StackPanel Orientation="Vertical" Margin="0,6,0,0">
                <TextBlock x:Uid="TextSettingsFeedback" TextWrapping="WrapWholeWords" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <HyperlinkButton HorizontalAlignment="Center" Margin="0,6,0,0" Command="{x:Bind ViewModel.StoreRatingCommand}">
                    <TextBlock x:Uid="HyperlinkSettingsFeedbackRate" TextWrapping="WrapWholeWords"/>
                </HyperlinkButton>
                <HyperlinkButton NavigateUri="{x:Bind helpers:AppConstants.UriGithub}" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE71B;" Margin="0,0,12,0"/>
                        <TextBlock x:Uid="HyperlinkSettingsFeedbackGithub" TextWrapping="WrapWholeWords"/>
                    </StackPanel>
                </HyperlinkButton>

                <Button x:Name="ButtonDialogFeedbackDonate" IsEnabled="{Binding ElementName=ButtonLeftPaneSettings, Path=IsEnabled}" Margin="0,6,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.ShowDonateDialogCommand}">
                    <TextBlock x:Uid="DialogFeedbackButtonDonate"/>
                </Button>
            </StackPanel>
        </muxc:TeachingTip>

        <muxc:TeachingTip
            x:Name="TeachingTipUpdated"
            x:Uid="DialogUpdated"
            IsLightDismissEnabled="False"
            ActionButtonCommand="{x:Bind ViewModel.ShowChangelogCommand}"
            ActionButtonClick="TeachingTipUpdated_ActionButtonClick"
            ActionButtonStyle="{ThemeResource AccentButtonStyle}">
            <muxc:TeachingTip.IconSource>
                <muxc:FontIconSource Glyph="&#xF133;"/>
            </muxc:TeachingTip.IconSource>
        </muxc:TeachingTip>
    </Grid>
</Page>
